import{_ as o,o as e,c as a,R as i}from"./chunks/framework.EUU6lLMq.js";const h=JSON.parse('{"title":"Instalação","description":"","frontmatter":{},"headers":[],"relativePath":"pt_BR/guide/installation.md","filePath":"pt_BR/guide/installation.md"}'),r={name:"pt_BR/guide/installation.md"},s=i(`<h1 id="instalacao" tabindex="-1">Instalação <a class="header-anchor" href="#instalacao" aria-label="Permalink to &quot;Instalação&quot;">​</a></h1><h2 id="verifique-se-o-seu-dispositivo-e-compativel" tabindex="-1">Verifique se o seu dispositivo é compatível <a class="header-anchor" href="#verifique-se-o-seu-dispositivo-e-compativel" aria-label="Permalink to &quot;Verifique se o seu dispositivo é compatível&quot;">​</a></h2><p>Baixe o app gerenciador do KernelSU em <a href="https://github.com/tiann/KernelSU/releases" target="_blank" rel="noreferrer">GitHub Releases</a>, e instale-o no seu dispositivo:</p><ul><li>Se o app mostrar <code>Sem suporte</code>, significa que <strong>você deve compilar o kernel sozinho</strong>. O KernelSU não fornecerá e nunca fornecerá uma boot.img para você instalar.</li><li>Se o app mostrar <code>Não instalado</code>, então seu dispositivo é oficialmente suportado pelo KernelSU.</li></ul><div class="info custom-block"><p class="custom-block-title">INFORMAÇÕES</p><p>Para dispositivos mostrando <code>Sem suporte</code>, aqui está os <a href="./unofficially-support-devices.html">Dispositivos com suporte não oficial</a>. Você mesmo pode compilar o kernel.</p></div><h2 id="backup-padrao-do-boot-img" tabindex="-1">Backup padrão do boot.img <a class="header-anchor" href="#backup-padrao-do-boot-img" aria-label="Permalink to &quot;Backup padrão do boot.img&quot;">​</a></h2><p>Antes de fazer o flash, você deve primeiro fazer backup de seu boot.img padrão. Se você encontrar algum bootloop, você sempre pode restaurar o sistema voltando para o boot padrão de fábrica usando o fastboot.</p><div class="warning custom-block"><p class="custom-block-title">AVISO</p><p>Flashar pode causar perda de dados, certifique-se de executar esta etapa bem antes de prosseguir para a próxima! Você também pode fazer backup de todos os dados do seu telefone, se necessário.</p></div><h2 id="conhecimento-necessario" tabindex="-1">Conhecimento necessário <a class="header-anchor" href="#conhecimento-necessario" aria-label="Permalink to &quot;Conhecimento necessário&quot;">​</a></h2><h3 id="adb-e-fastboot" tabindex="-1">ADB e fastboot <a class="header-anchor" href="#adb-e-fastboot" aria-label="Permalink to &quot;ADB e fastboot&quot;">​</a></h3><p>Por padrão, você usará as ferramentas ADB e fastboot neste tutorial, portanto, se você não as conhece, recomendamos pesquisar para aprender sobre elas primeiro.</p><h3 id="kmi" tabindex="-1">KMI <a class="header-anchor" href="#kmi" aria-label="Permalink to &quot;KMI&quot;">​</a></h3><p>Kernel Module Interface (KMI), versões de kernel com o mesmo KMI são <strong>compatíveis</strong>, isso é o que &quot;geral&quot; significa no GKI. Por outro lado, se o KMI for diferente, então esses kernels não são compatíveis entre si, e atualizar uma imagem do kernel com um KMI diferente do seu dispositivo pode causar um bootloop.</p><p>Especificamente, para dispositivos GKI, o formato da versão do kernel deve ser a seguinte:</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>KernelRelease :=</span></span>
<span class="line"><span>Version.PatchLevel.SubLevel-AndroidRelease-KmiGeneration-suffix</span></span>
<span class="line"><span>w      .x         .y       -zzz           -k            -something</span></span></code></pre></div><p><code>w.x-zzz-k</code> é a versão KMI. Por exemplo, se a versão do kernel de um dispositivo for <code>5.10.101-android12-9-g30979850fc20</code>, então seu KMI será <code>5.10-android12-9</code>. Teoricamente, ele pode inicializar normalmente com outros kernels KMI.</p><div class="tip custom-block"><p class="custom-block-title">DICA</p><p>Observe que o SubLevel na versão do kernel não faz parte do KMI! Isso significa que <code>5.10.101-android12-9-g30979850fc20</code> tem o mesmo KMI que <code>5.10.137-android12-9-g30979850fc20</code>!</p></div><h3 id="security-patch-level" tabindex="-1">Nível do patch de segurança <a class="header-anchor" href="#security-patch-level" aria-label="Permalink to &quot;Nível do patch de segurança {#security-patch-level}&quot;">​</a></h3><p>Dispositivos Android mais recentes podem ter mecanismos anti-rollback que não permitem flashar uma boot.img com um nível de patch de segurança antigo. Por exemplo, se o kernel do seu dispositivo for <code>5.10.101-android12-9-g30979850fc20</code>, o patch de segurança será <code>2023-11</code>, mesmo se você atualizar o kernel consistente com o KMI do kernel, se o nível do patch de segurança for anterior a <code>2023-11</code> (como <code>2023-06</code>), então isso pode causar bootloop.</p><p>Portanto, os kernels com os níveis de patch de segurança mais recentes são preferidos, mantendo a consistência do KMI.</p><h3 id="versao-do-kernel-vs-versao-do-android" tabindex="-1">Versão do kernel vs Versão do Android <a class="header-anchor" href="#versao-do-kernel-vs-versao-do-android" aria-label="Permalink to &quot;Versão do kernel vs Versão do Android&quot;">​</a></h3><p>Por favor, observe: <strong>A versão do kernel e a versão do Android não são necessariamente iguais!</strong></p><p>Se você descobrir que a versão do seu kernel é <code>android12-5.10.101</code>, mas a versão do seu sistema Android é Android 13 ou outra, não se surpreenda, pois o número da versão do sistema Android não é necessariamente igual ao número da versão do kernel Linux. O número da versão do kernel Linux geralmente é consistente com a versão do sistema Android que acompanha o <strong>dispositivo quando ele é enviado</strong>. Se o sistema Android for atualizado posteriormente, a versão do kernel geralmente não será alterada. Se você precisar fazer o flash, <strong>por favor, consulte sempre a versão do kernel!</strong></p><h2 id="introducao" tabindex="-1">Introdução <a class="header-anchor" href="#introducao" aria-label="Permalink to &quot;Introdução&quot;">​</a></h2><p>Existem vários métodos de instalação do KernelSU, cada um adequado para um cenário diferente, portanto escolha conforme necessário.</p><ol><li>Instalar com fastboot usando o boot.img fornecido por KernelSU</li><li>Instalar com um app kernel flash, como KernelFlasher</li><li>Repare o boot.img manualmente e instale-o</li><li>Instalar com Recovery personalizado (por exemplo, TWRP)</li></ol><h2 id="instalar-com-o-boot-img-fornecido-por-kernelsu" tabindex="-1">Instalar com o boot.img fornecido por KernelSU <a class="header-anchor" href="#instalar-com-o-boot-img-fornecido-por-kernelsu" aria-label="Permalink to &quot;Instalar com o boot.img fornecido por KernelSU&quot;">​</a></h2><p>Se o <code>boot.img</code> do seu dispositivo usa um formato de compactação comumente usado, você pode usar as imagens GKI fornecidas pelo KernelSU para atualizá-lo diretamente. Não requer TWRP ou autocorreção da imagem.</p><h3 id="encontre-o-boot-img-adequado" tabindex="-1">Encontre o boot.img adequado <a class="header-anchor" href="#encontre-o-boot-img-adequado" aria-label="Permalink to &quot;Encontre o boot.img adequado&quot;">​</a></h3><p>O KernelSU fornece um boot.img genérico para dispositivos GKI e você deve liberar o boot.img para a partição boot do dispositivo.</p><p>Você pode baixar o boot.img em <a href="https://github.com/tiann/KernelSU/releases" target="_blank" rel="noreferrer">GitHub Release</a>, por favor, observe que você deve usar a versão correta do boot.img. Se você não sabe qual arquivo baixar, leia atentamente a descrição de <a href="#kmi">KMI</a> e <a href="#security-patch-level">Nível do patch de segurança</a> neste documento.</p><p>Normalmente, existem três arquivos de inicialização em formatos diferentes no mesmo KMI e nível do patch de segurança. Eles são todos iguais, exceto pelo formato de compactação do kernel. Por favor, verifique o formato de compactação do kernel de seu boot.img original. Você deve usar o formato correto, como <code>lz4</code>, <code>gz</code>. Se você usar um formato de compactação incorreto, poderá encontrar bootloop após flashar o boot.img.</p><div class="info custom-block"><p class="custom-block-title">INFORMAÇÕES</p><ol><li>Você pode usar o magiskboot para obter o formato de compactação de seu boot original; é claro que você também pode perguntar a outras pessoas mais experientes com o mesmo modelo do seu dispositivo. Além disso, o formato de compactação do kernel geralmente não muda, portanto, se você inicializar com êxito com um determinado formato de compactação, poderá tentar esse formato mais tarde.</li><li>Os dispositivos Xiaomi geralmente usam <code>gz</code> ou <code>uncompressed</code>.</li><li>Para dispositivos Pixel, siga as instruções abaixo.</li></ol></div><h3 id="flash-boot-img-para-o-dispositivo" tabindex="-1">Flash boot.img para o dispositivo <a class="header-anchor" href="#flash-boot-img-para-o-dispositivo" aria-label="Permalink to &quot;Flash boot.img para o dispositivo&quot;">​</a></h3><p>Use o <code>adb</code> para conectar seu dispositivo, execute <code>adb reboot bootloader</code> para entrar no modo fastboot e use este comando para flashar o KernelSU:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fastboot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flash</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> boot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> boot.img</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFORMAÇÕES</p><p>Se o seu dispositivo suportar <code>fastboot boot</code>, você pode usar primeiro <code>fastboot boot boot.img</code> para tentar usar o boot.img para inicializar o sistema primeiro. Se algo inesperado acontecer, reinicie-o novamente para inicializar.</p></div><h3 id="reiniciar" tabindex="-1">Reiniciar <a class="header-anchor" href="#reiniciar" aria-label="Permalink to &quot;Reiniciar&quot;">​</a></h3><p>Após a conclusão do flash, você deve reiniciar o dispositivo:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fastboot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reboot</span></span></code></pre></div><h2 id="instalar-com-kernel-flasher" tabindex="-1">Instalar com Kernel Flasher <a class="header-anchor" href="#instalar-com-kernel-flasher" aria-label="Permalink to &quot;Instalar com Kernel Flasher&quot;">​</a></h2><p>Etapa:</p><ol><li>Baixe o zip AnyKernel3. Se você não sabe qual arquivo baixar, leia atentamente a descrição de <a href="#kmi">KMI</a> e <a href="#security-patch-level">Nível do patch de segurança</a> neste documento.</li><li>Abra o app Kernel Flash (conceda as permissões de root necessárias) e use o zip AnyKernel3 fornecido para fazer o flash.</li></ol><p>Dessa forma, é necessário que o app Kernel Flasher tenha permissões root. Você pode usar os seguintes métodos para conseguir isso:</p><ol><li><p>Seu dispositivo está rooteado. Por exemplo, você instalou o KernelSU e deseja atualizar para a versão mais recente ou fez o root por meio de outros métodos (como Magisk).</p></li><li><p>Se o seu telefone não estiver rooteado, mas o telefone suportar o método de inicialização temporária de <code>fastboot boot boot.img</code>, você pode usar a imagem GKI fornecida pelo KernelSU para inicializar temporariamente o seu dispositivo, obter permissões de root temporária e, em seguida, usar o Kernel Flasher para obter privilégios de root permanente.</p></li><li><p><a href="https://github.com/capntrips/KernelFlasher/releases" target="_blank" rel="noreferrer">Kernel Flasher</a></p></li><li><p><a href="https://play.google.com/store/apps/details?id=com.franco.kernel" target="_blank" rel="noreferrer">Franco Kernel Manager</a></p></li><li><p><a href="https://play.google.com/store/apps/details?id=flar2.exkernelmanager" target="_blank" rel="noreferrer">Ex Kernel Manager</a></p></li></ol><p>PS. Este método é mais conveniente ao atualizar o KernelSU e pode ser feito sem um computador (backup primeiro).</p><h2 id="corrigir-boot-img-manualmente" tabindex="-1">Corrigir boot.img manualmente <a class="header-anchor" href="#corrigir-boot-img-manualmente" aria-label="Permalink to &quot;Corrigir boot.img manualmente&quot;">​</a></h2><p>Para alguns dispositivos, o formato boot.img não é tão comum como <code>lz4</code>, <code>gz</code> e <code>uncompressed</code>. O mais típico é o Pixel, seu formato boot.img é <code>lz4_legacy</code> compactado, ramdisk pode ser <code>gz</code> também pode ser compactado <code>lz4_legacy</code>. Neste momento, se você flashar diretamente o boot.img fornecido pelo KernelSU, o telefone pode não conseguir inicializar. Neste momento, você pode corrigir manualmente o boot.img para conseguir isso.</p><p>É sempre recomendado usar <code>magiskboot</code> para corrigir imagens, existem duas maneiras:</p><ol><li><a href="https://github.com/topjohnwu/Magisk/releases" target="_blank" rel="noreferrer">magiskboot</a></li><li><a href="https://github.com/ookiineko/magiskboot_build/releases/tag/last-ci" target="_blank" rel="noreferrer">magiskboot_build</a></li></ol><p>A versão oficial do <code>magiskboot</code> só pode rodar em dispositivos Android, se você quiser rodar no PC, você pode tentar a segunda.</p><div class="tip custom-block"><p class="custom-block-title">DICA</p><p>Android-Image-Kitchen não é recomendado agora, porque ele não lida corretamente com os metadados de inicialização (como o nível do patch de segurança). Portanto, pode não funcionar em alguns dispositivos.</p></div><h3 id="preparacao" tabindex="-1">Preparação <a class="header-anchor" href="#preparacao" aria-label="Permalink to &quot;Preparação&quot;">​</a></h3><ol><li>Obtenha o boot.img padrão do telefone. Você pode obtê-lo com os fabricantes do seu dispositivo, talvez você precise do <a href="https://github.com/ssut/payload-dumper-go" target="_blank" rel="noreferrer">payload-dumper-go</a>.</li><li>Baixe o arquivo zip AnyKernel3 fornecido pelo KernelSU que corresponde à versão KMI do seu dispositivo. Você pode consultar <a href="#install-with-custom-recovery">Instalar com Recovery personalizado</a>.</li><li>Descompacte o pacote AnyKernel3 e obtenha o arquivo <code>Image</code>, que é o arquivo do kernel do KernelSU.</li></ol><h3 id="using-magiskboot-on-Android-devices" tabindex="-1">Usando o magiskboot em dispositivos Android <a class="header-anchor" href="#using-magiskboot-on-Android-devices" aria-label="Permalink to &quot;Usando o magiskboot em dispositivos Android {#using-magiskboot-on-Android-devices}&quot;">​</a></h3><ol><li>Baixe o Magisk mais recente em <a href="https://github.com/topjohnwu/Magisk/releases" target="_blank" rel="noreferrer">GitHub Releases</a>.</li><li>Renomeie o <code>Magisk-*(version).apk</code> para <code>Magisk-*.zip</code> e descompacte-o.</li><li>Envie <code>Magisk-*/lib/arm64-v8a/libmagiskboot.so</code> para o seu dispositivo por ADB: <code>adb push Magisk-*/lib/arm64-v8a/libmagiskboot.so /data/local/tmp/magiskboot</code>.</li><li>Envie o boot.img padrão e Image em AnyKernel3 para o seu dispositivo.</li><li>Entre no ADB shell e no diretório cd <code>/data/local/tmp/</code>, em seguida, <code>chmod +x magiskboot</code>.</li><li>Entre no ADB shell e no diretório cd <code>/data/local/tmp/</code>, execute <code>./magiskboot unpack boot.img</code> para descompactar <code>boot.img</code>, você obterá um arquivo <code>kernel</code>, este é o seu kernel padrão.</li><li>Substitua <code>kernel</code> por <code>Image</code>: <code>mv -f Image kernel</code>.</li><li>Execute <code>./magiskboot repack boot.img</code> para reembalar o boot.img, e você obterá um arquivo <code>new-boot.img</code>, faça o flash deste arquivo para o dispositivo por fastboot.</li></ol><h3 id="using-magiskboot-on-PC" tabindex="-1">Usando o magiskboot no PC Windows/macOS/Linux <a class="header-anchor" href="#using-magiskboot-on-PC" aria-label="Permalink to &quot;Usando o magiskboot no PC Windows/macOS/Linux {#using-magiskboot-on-PC}&quot;">​</a></h3><ol><li>Baixe o <code>magiskboot</code> adequado para o seu sistema operacional em <a href="https://github.com/ookiineko/magiskboot_build/releases/tag/last-ci" target="_blank" rel="noreferrer">magiskboot_build</a>.</li><li>Prepare o boot.img padrão e Image em seu PC.</li><li><code>chmod +x magiskboot</code></li><li>Entre no diretório apropriado, execute <code>./magiskboot unpack boot.img</code> para descompactar <code>boot.img</code>. Você obterá um arquivo <code>kernel</code>, este é o seu kernel padrão.</li><li>Substitua <code>kernel</code> por <code>Image</code>: <code>mv -f Image kernel</code>.</li><li>Execute <code>./magiskboot repack boot.img</code> para reembalar o boot.img, e você obterá um arquivo <code>new-boot.img</code>, faça o flash deste arquivo para o dispositivo por fastboot.</li></ol><div class="info custom-block"><p class="custom-block-title">INFORMAÇÕES</p><p>O <code>magiskboot</code> oficial pode executar o dispositivo <code>Linux</code> normalmente. Se você for um usuário Linux, você pode usar a versão oficial.</p></div><h2 id="install-with-custom-recovery" tabindex="-1">Instalar com Recovery personalizado <a class="header-anchor" href="#install-with-custom-recovery" aria-label="Permalink to &quot;Instalar com Recovery personalizado {#install-with-custom-recovery}&quot;">​</a></h2><p>Pré-requisito: Seu dispositivo deve ter um Recovery personalizado, como TWRP. Se apenas o Recovery oficial estiver disponível, use outro método.</p><p>Etapa:</p><ol><li>Na <a href="https://github.com/tiann/KernelSU/releases" target="_blank" rel="noreferrer">página de lançamento</a> do KernelSU, baixe o pacote zip começando com AnyKernel3 que corresponde à versão do seu telefone; por exemplo, a versão do kernel do telefone é <code>android12-5.10. 66</code>, então você deve baixar o arquivo <code>AnyKernel3-android12-5.10.66_yyyy-MM.zip</code> (onde <code>yyyy</code> é o ano e <code>MM</code> é o mês).</li><li>Reinicie o telefone no TWRP.</li><li>Use o adb para colocar AnyKernel3-*.zip no telefone /sdcard e escolha instalá-lo na interface do TWRP; ou você pode diretamente <code>adb sideload AnyKernel-*.zip</code> para instalar.</li></ol><p>PS. Este método é adequado para qualquer instalação (não limitado à instalação inicial ou atualizações subsequentes), desde que você use TWRP.</p><h2 id="outros-metodos" tabindex="-1">Outros métodos <a class="header-anchor" href="#outros-metodos" aria-label="Permalink to &quot;Outros métodos&quot;">​</a></h2><p>Na verdade, todos esses métodos de instalação têm apenas uma ideia principal, que é <strong>substituir o kernel original pelo fornecido pelo KernelSU</strong>, desde que isso possa ser alcançado, ele pode ser instalado. Por exemplo, a seguir estão outros métodos possíveis.</p><ol><li>Primeiro instale o Magisk, obtenha privilégios de root através do Magisk e então use o kernel flasher para fazer o flash no zip AnyKernel do KernelSU.</li><li>Use algum kit de ferramentas de flash em PCs para flashar no kernel fornecido pelo KernelSU.</li></ol><p>Mas se não funcionar, por favor, tente o método <code>magiskboot</code>.</p>`,68),t=[s];function n(d,l,c,p,m,u){return e(),a("div",null,t)}const g=o(r,[["render",n]]);export{h as __pageData,g as default};
