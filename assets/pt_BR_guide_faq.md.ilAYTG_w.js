import{_ as e,o,c as a,R as r}from"./chunks/framework.EUU6lLMq.js";const k=JSON.parse('{"title":"FAQ","description":"","frontmatter":{},"headers":[],"relativePath":"pt_BR/guide/faq.md","filePath":"pt_BR/guide/faq.md"}'),s={name:"pt_BR/guide/faq.md"},i=r('<h1 id="faq" tabindex="-1">FAQ <a class="header-anchor" href="#faq" aria-label="Permalink to &quot;FAQ&quot;">​</a></h1><h2 id="kernelsu-oferece-suporte-ao-meu-dispositivo" tabindex="-1">KernelSU oferece suporte ao meu dispositivo? <a class="header-anchor" href="#kernelsu-oferece-suporte-ao-meu-dispositivo" aria-label="Permalink to &quot;KernelSU oferece suporte ao meu dispositivo?&quot;">​</a></h2><p>Primeiro, seu dispositivo deve ser capaz de desbloquear o bootloader. Se não, então não há suporte.</p><p>Em seguida, instale o app gerenciador do KernelSU em seu dispositivo e abra-o, se mostrar <code>Sem suporte</code> então seu dispositivo não pode ser suportado imediatamente, mas você pode construir a fonte do kernel e integrar o KernelSU para fazê-lo funcionar ou usar <a href="./unofficially-support-devices.html">Dispositivos com suporte não oficial</a>.</p><h2 id="para-usar-o-kernelsu-precisa-desbloquear-o-bootloader" tabindex="-1">Para usar o KernelSU precisa desbloquear o bootloader? <a class="header-anchor" href="#para-usar-o-kernelsu-precisa-desbloquear-o-bootloader" aria-label="Permalink to &quot;Para usar o KernelSU precisa desbloquear o bootloader?&quot;">​</a></h2><p>Certamente, sim.</p><h2 id="kernelsu-suporta-modulos" tabindex="-1">KernelSU suporta módulos? <a class="header-anchor" href="#kernelsu-suporta-modulos" aria-label="Permalink to &quot;KernelSU suporta módulos?&quot;">​</a></h2><p>Sim, verifique <a href="./module.html">Guias de módulo</a> por favor.</p><h2 id="kernelsu-suporta-xposed" tabindex="-1">KernelSU suporta Xposed? <a class="header-anchor" href="#kernelsu-suporta-xposed" aria-label="Permalink to &quot;KernelSU suporta Xposed?&quot;">​</a></h2><p>Sim, você pode usar LSPosed com <a href="https://github.com/Dr-TSNG/ZygiskNext" target="_blank" rel="noreferrer">ZygiskNext</a>.</p><h2 id="kernelsu-suporta-zygisk" tabindex="-1">KernelSU suporta Zygisk? <a class="header-anchor" href="#kernelsu-suporta-zygisk" aria-label="Permalink to &quot;KernelSU suporta Zygisk?&quot;">​</a></h2><p>KernelSU não tem suporte integrado ao Zygisk, mas você pode usar <a href="https://github.com/Dr-TSNG/ZygiskNext" target="_blank" rel="noreferrer">ZygiskNext</a>.</p><h2 id="kernelsu-e-compativel-com-o-magisk" tabindex="-1">KernelSU é compatível com o Magisk? <a class="header-anchor" href="#kernelsu-e-compativel-com-o-magisk" aria-label="Permalink to &quot;KernelSU é compatível com o Magisk?&quot;">​</a></h2><p>O sistema de módulos do KernelSU está em conflito com a montagem mágica do Magisk, se houver algum módulo habilitado no KernelSU, então todo o Magisk não funcionaria.</p><p>Mas se você usar apenas o <code>su</code> do KernelSU, então funcionará bem com o Magisk. KernelSU modifica o <code>kernel</code> e o Magisk modifica o <code>ramdisk</code>, eles podem trabalhar juntos.</p><h2 id="kernelsu-substituira-o-magisk" tabindex="-1">KernelSU substituirá o Magisk? <a class="header-anchor" href="#kernelsu-substituira-o-magisk" aria-label="Permalink to &quot;KernelSU substituirá o Magisk?&quot;">​</a></h2><p>Achamos que não e esse não é o nosso objetivo. O Magisk é bom o suficiente para solução root do espaço do usuário e terá uma longa vida. O objetivo do KernelSU é fornecer uma interface de kernel aos usuários, não substituindo o Magisk.</p><h2 id="kernelsu-oferece-suporte-a-dispositivos-nao-gki" tabindex="-1">KernelSU oferece suporte a dispositivos não GKI? <a class="header-anchor" href="#kernelsu-oferece-suporte-a-dispositivos-nao-gki" aria-label="Permalink to &quot;KernelSU oferece suporte a dispositivos não GKI?&quot;">​</a></h2><p>É possível. Mas você deve baixar o código-fonte do kernel e integrar o KernelSU à árvore do código-fonte e compilar o kernel você mesmo.</p><h2 id="kernelsu-oferece-suporte-a-dispositivos-abaixo-do-android-12" tabindex="-1">KernelSU oferece suporte a dispositivos abaixo do Android 12? <a class="header-anchor" href="#kernelsu-oferece-suporte-a-dispositivos-abaixo-do-android-12" aria-label="Permalink to &quot;KernelSU oferece suporte a dispositivos abaixo do Android 12?&quot;">​</a></h2><p>É o kernel do dispositivo que afeta a compatibilidade do KernelSU e não tem nada a ver com a versão do Android. A única restrição é que os dispositivos lançados com Android 12 devem ser kernel 5.10+ (dispositivos GKI). Então:</p><ol><li>Os dispositivos lançados com Android 12 devem ser compatíveis.</li><li>Dispositivos com kernel antigo (alguns dispositivos Android 12 também têm o kernel antigo) são compatíveis (você mesmo deve construir o kernel).</li></ol><h2 id="kernelsu-suporta-kernel-antigo" tabindex="-1">KernelSU suporta kernel antigo? <a class="header-anchor" href="#kernelsu-suporta-kernel-antigo" aria-label="Permalink to &quot;KernelSU suporta kernel antigo?&quot;">​</a></h2><p>É possível, o KernelSU é portado para o kernel 4.14 agora, para o kernel mais antigo, você precisa fazer o backport manualmente e PRs são sempre bem-vindas!</p><h2 id="como-integrar-o-kernelsu-para-o-kernel-antigo" tabindex="-1">Como integrar o KernelSU para o kernel antigo? <a class="header-anchor" href="#como-integrar-o-kernelsu-para-o-kernel-antigo" aria-label="Permalink to &quot;Como integrar o KernelSU para o kernel antigo?&quot;">​</a></h2><p>Por favor, consulte a guia <a href="./how-to-integrate-for-non-gki.html">Como integrar o KernelSU para kernels não GKI</a>.</p><h2 id="por-que-a-minha-versao-do-android-e-13-e-o-kernel-mostra-android12-5-10" tabindex="-1">Por que a minha versão do Android é 13 e o kernel mostra “android12-5.10”? <a class="header-anchor" href="#por-que-a-minha-versao-do-android-e-13-e-o-kernel-mostra-android12-5-10" aria-label="Permalink to &quot;Por que a minha versão do Android é 13 e o kernel mostra “android12-5.10”?&quot;">​</a></h2><p>A versão do Kernel não tem nada a ver com a versão do Android, se você precisar fazer o flash do kernel, use sempre a versão do kernel, a versão do Android não é tão importante.</p><h2 id="eu-sou-gki1-0-posso-usar-isso" tabindex="-1">Eu sou GKI1.0, posso usar isso? <a class="header-anchor" href="#eu-sou-gki1-0-posso-usar-isso" aria-label="Permalink to &quot;Eu sou GKI1.0, posso usar isso?&quot;">​</a></h2><p>GKI1 é completamente diferente do GKI2, você deve compilar o kernel sozinho.</p><h2 id="como-posso-fazer-system-rw" tabindex="-1">Como posso fazer <code>/system</code> RW? <a class="header-anchor" href="#como-posso-fazer-system-rw" aria-label="Permalink to &quot;Como posso fazer `/system` RW?&quot;">​</a></h2><p>Não recomendamos que você modifique a partição do sistema diretamente. Você deve usar <a href="./module.html">Guias de módulo</a> para modificá-lo sem sistema. Se você insiste em fazer isso, verifique <a href="https://github.com/HuskyDG/magic_overlayfs" target="_blank" rel="noreferrer">magisk_overlayfs</a>.</p><h2 id="o-kernelsu-pode-modificar-hosts-como-posso-usar-adaway" tabindex="-1">O KernelSU pode modificar hosts? Como posso usar AdAway? <a class="header-anchor" href="#o-kernelsu-pode-modificar-hosts-como-posso-usar-adaway" aria-label="Permalink to &quot;O KernelSU pode modificar hosts? Como posso usar AdAway?&quot;">​</a></h2><p>Claro. Mas o KernelSU não tem suporte a hosts integrados, você pode instalar <a href="https://github.com/symbuzzer/systemless-hosts-KernelSU-module" target="_blank" rel="noreferrer">systemless-hosts</a> para fazer isso.</p>',34),t=[i];function n(d,l,u,p,m,c){return o(),a("div",null,t)}const f=e(s,[["render",n]]);export{k as __pageData,f as default};
